
Description

In this directory you can perform some simulations of Lid Driven Cavity (LDC).
The initial condition is rest flow and upper moving lid with fixed velocity of 0.1
No slip B.C. along x direction (streamwise) and along y direction (normal to wall) are applied.
Different scripts (*.x) will allow you to:
        1) Compile the code in different configurations
        2) Run the code, in a "ad hoc" created directory

There are some script (runMe.*.sh) to perform multiple simulation and check the results using gnuplot

Files
├── ghia.x.dat
├── ghia.y.dat
├── plot.gnu
├── plot.R00100.gnu
├── plot.R01000.gnu
├── plot.R10000.gnu
├── README
├── runMe.1.sh
├── runMe.2.sh
├── runMe.3.sh
├── run.single.gpu.fused.dc.nv.x
├── run.single.gpu.fused.offload.nv.x
├── run.single.gpu.fused.openacc.nv.x
├── run.single.multicore.fused.gnu.x
├── run.single.multicore.fused.intel.x
├── run.single.multicore.fused.nv.x
├── run.single.original.offload.gnu.x
└── run.single.serial.original.gnu.x


  
To run Von Karman Streets test use the following scripts (each one create a different directory)

* run.single.gpu.fused.dc.nv.x       --> single, gpu, fused with do concurrent parallelization using NVIDIA compiler
* run.single.gpu.fused.offload.nv.x  --> single, gpu, fused with offload parallelization using NVIDIA compiler
* run.single.gpu.fused.openacc.nv.x  --> single, gpu, fused with openacc parallelization using NVIDIA compiler
* run.single.multicore.fused.gnu.x   --> single, multicore, fused with CPU parallelization using GNU compiler
* run.single.multicore.fused.intel.x --> single, multicore, fused with CPU parallelization using INTEL compiler
* run.single.multicore.fused.nv.x    --> single, multicore, fused with CPU parallelization using NVIDIA compiler
* run.single.double.fused.gnu.x      --> double, cpu, fused with concurrent parallelization using NVIDIA compiler
* run.single.serial.original.gnu.x   --> single, cpu, original with cconcurrent parallelization using NVIDIA compiler


* runMe.1.sh --> Running 3 simulation using GPU,FUSED and nvidia compiler (dc,offload.openacc)  at Re=10000.
* runMe.2.sh --> Running 3 simulation using CPU, fused and multicore (intel,nvidia,gnu) at Re = 1000.
* runMe.2.sh --> Running 2 simulation using CPU, serial and GNU compiler (original,fused) at Re = 100.

* ghia.x.dat, ghia.y.dat: Reference figure from Ghia Article

