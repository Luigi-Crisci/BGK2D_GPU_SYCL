
Description

In this directory you can perform some sumulation of poiuseulle flow (POF).
The initial condition is rest flow and a volume forcing is used. 
Periodic B.C. along x direction (streamwise) and no-slip B.C. along y direction (normal to wall).
Different scripts (*.x) will allo you to
	1) Compile the code 
	2) Run the code, in a "ad hoc" created directory

There are some script (runMe.*.sh) to perform multiple simulation and check the results using gnuplot

Files
.
├── bgk.input
├── bgk.input.small
├── plot.gnu
├── plot.small.gnu
├── README
├── runMe.1.sh
├── runMe.2.sh
├── run.single.gpu.fused.nv.x
├── run.single.multicore.fused.nv.x
├── run.single.serial.fused.gnu.x
├── run.single.serial.fused.nv.x
└── run.single.serial.original.gnu.x


run.single.gpu.fused.dc.nv.x	 ---> single precision, gpu with do concurrent, fused using nvidia compiler
run.single.multicore.fused.nv.x  ---> single precision, multicore, fused using nvidia compiler
run.single.serial.fused.gnu.x	 ---> single precision, serial, fused using GNU compiler
run.single.serial.fused.nv. 	 ---> single precision, serial, fused using nvidia compiler 
run.single.serial.original.gnu.x ---> single precision, serial, original using GNU compiler


bgk.input        --> input file used for the simulation (big one)
bgk.input.small  --> input file used for the simulation (small one)
plot.gnu         --> gnuplot file to check the results 
plot.gnu.small   --> gnuplot file to check the results between original and fused version (GNU)

runMe.1.sh --> Running 3 simulation using single precision e nvidia compiler (serial,multicore,GPU via "do concurrent") 
runMe.2.sh --> Running 3 simulation using single precision e GNU compiler (fused,original)
